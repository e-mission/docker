version: "3"
services:
  web-server:
    build:
      context: ./webapp
      args:
        SERVER_IMAGE_TAG: master_2022-10-09--26-05
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - WEB_SERVER_HOST=0.0.0.0
      - SERVER_BRANCH=ceo_ebike_project
      - STUDY_CONFIG=stage-program
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      # If you are exposing this directly, use 80:8080 or 443:8080
      # If you are using a reverse proxy, use a unique port and configure the
      # RP appropriately
      # - "CHANGEME:8080"
    networks:
      - emission
  analysis-server:
    build:
      context: ./analysis
      args:
        SERVER_IMAGE_TAG: master_2022-10-09--26-05
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - WEB_SERVER_HOST=0.0.0.0
      - SERVER_BRANCH=ceo_ebike_project
      - STUDY_CONFIG=stage-program
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - emission
  db:
    image: mongo:4.4.0
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

    #Volumes is the preferred way to persist data generated by a container. In this case we use a volume to persist the contents
    #of the data base. Learn more about how to use volumes here: https://docs.docker.com/storage/volumes/
    # And learn how to configure volumes in your compose file here: https://docs.docker.com/compose/compose-file/#volume-configuration-reference
    volumes:
      - mongo-data:/data/db
    networks:
       - emission

networks:
  emission:

volumes:
  mongo-data:
